# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                               controllers.Application.index

# REST API

POST    /api/users                                      controllers.api.Users.signup

POST    /api/users/auth                                 controllers.api.Users.auth
GET     /api/users/info                                 controllers.api.Users.info


# Services API
GET     /api/services/:serviceId/access                 controllers.api.Services.hasServiceAccess( serviceId:Int )
GET     /api/services/lookup                            controllers.api.Services.lookup( filter:String ?= "", limit: Int ?= 10 )

GET     /api/services/:serviceId                        controllers.api.Services.get( serviceId:Int )
POST    /api/services                                   controllers.api.Services.create
PUT     /api/services                                   controllers.api.Services.update
DELETE  /api/services/:serviceId                        controllers.api.Services.delete( serviceId:Int )

GET     /api/places/:placeId/services                   controllers.api.Services.forPlace( placeId:Int )
POST    /api/places/:placeId/services/:serviceId        controllers.api.Services.attachToPlace( serviceId:Int, placeId:Int )
DELETE  /api/places/:placeId/services/:serviceId        controllers.api.Services.detachFromPlace( serviceId:Int, placeId:Int )



# Places

GET     /api/places                                     controllers.api.Places.list
GET     /api/places/stats                               controllers.api.Places.globalStats
GET     /api/places/:placeId                            controllers.api.Places.get(placeId:Int)
POST    /api/places                                     controllers.api.Places.create
PUT     /api/places                                     controllers.api.Places.update
DELETE  /api/places/:placeId                            controllers.api.Places.delete(placeId:Int)


# Rates API

GET     /api/rates/:rateId                               controllers.api.ServiceRates.get(rateId:Int)
GET     /api/services/:serviceId/rates                   controllers.api.ServiceRates.listForService(serviceId:Int, includeInactive:Int ?= 0 )
POST    /api/rates                                       controllers.api.ServiceRates.create
PUT     /api/rates                                       controllers.api.ServiceRates.update
DELETE  /api/rates/:rateId                               controllers.api.ServiceRates.delete(rateId:Int)
PUT     /api/rates/:rateId/active/:isActive              controllers.api.ServiceRates.setActive(rateId:Int, isActive:Int)

POST    /api/services/:serviceId/rates/update_active    controllers.api.ServiceRates.updateActiveForService( serviceId:Int )


# Bill API

GET     /api/bills/:billId                               controllers.api.Bills.get(billId:Int)
GET     /api/services/:serviceId/bills                   controllers.api.Bills.listByService( serviceId:Int, fromDate:String ?= "", toDate:String ?= "" )
GET     /api/rates/:rateId/bills                         controllers.api.Bills.listByServiceRate( rateId:Int, fromDate:String ?= "", toDate:String ?= "" )
GET     /api/places/:placeId/bills                       controllers.api.Bills.listByPlace( placeId:Int, fromDate:String ?= "", toDate:String ?= "" )
POST    /api/bills/                                       controllers.api.Bills.create( updateAmount:Int ?= 0 )
PUT     /api/bills/                                       controllers.api.Bills.update( updateAmount:Int ?= 0 )
DELETE  /api/bills/:billId                               controllers.api.Bills.delete(billId:Int)



# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                   controllers.Assets.at(path="/public", file)
